<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>

<div id="map"></div>

<script>
  function initmap() {
    //  var service = new google.maps.DirectionsService();

    var styles = {
      default: null,
      hide: [
        {
          featureType: "poi.business",
          stylers: [{ visibility: "off" }]
        },
        {
          featureType: "transit",
          elementType: "labels.icon",
          stylers: [{ visibility: "off" }]
        }
      ]
    };
    var directions = new google.maps.DirectionsService();
    //var directionsDisplay;

    var renderer = new google.maps.DirectionsRenderer({
      suppressPolylines: true,
      suppressMarkers: true,
      polylineOptions: {
        strokeColor: "#C83939",
        strokeOpacity: 0,
        strokeWeight: 1,
        icons: [
          {
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              fillColor: "#C83939",
              scale: 3,
              strokeOpacity: 1
            },
            offset: "0",
            repeat: "15px"
          }
        ]
      }
    });
    var rendererarr = [];
    var rendererarr1 = [];
    var markers = [];
    var routes = [];
    var map, transitLayer;
    var MARKER_PATH =
      "https://developers.google.com/maps/documentation/javascript/images/marker_green";
    //var waypoints = new google.maps.DirectionsWaypoint();

    function initialize() {
      var mapOptions = {
        zoom: 13,
        center: new google.maps.LatLng(10.771971, 106.697845),
        mapTypeId: google.maps.MapTypeId.ROADMAP
        //styles: styles["hide"]
      };
      map = new google.maps.Map(document.getElementById("map"), mapOptions);
      //                         directionsDisplay = new google.maps.DirectionsRenderer({
      //   polylineOptions: {
      //     strokeColor: "red"
      //   }
      // });
      // list of points
      clearRoutes();
      clearMarkers();

      google.maps.event.addListener(renderer, "routeindex_changed", function() {
        renderDirectionsPolylines(
          renderer.getDirections(),
          renderer.getRouteIndex()
        );
        // console.log("aaaaaa");
        console.log(renderer.getRouteIndex());

        var index = renderer.getRouteIndex();
        var arrpath = [];

        var x = renderer.getDirections().routes[index].overview_path;

        arrpath.push(x);
        console.log("route " + index);
        console.log("--------------");
        var arrpoint = [];
        // for (var j = 0; j < x.length; j++) {
        // 	//console.log(x[j]);
        // 	var coord = getLiText(x[j]);
        // 	arrpoint.push(coord);
        // }
        // var legs = renderer.getDirections().routes[index].legs;
        // for (i = 0; i < legs.length; i++) {
        // 	var steps = legs[i].steps;
        // 	for (j = 0; j < steps.length; j++) {
        // 		var nextSegment = steps[j].path;
        // 		console.log("a");
        // 		console.log(nextSegment);
        // 		for (var k = 0; k < nextSegment.length; k++) {
        // 			var coord = getLiText(nextSegment[j]);
        // 			console.log(coord);
        // 			arrpoint.push(coord);
        // 		}
        // 		console.log("***********");
        // 	}
        // }
        // console.log("b");
        // console.log(arrpoint);
        // console.log("*******");
        // // if (
        // // 	renderer.getDirectionsTravelMode() !=
        // // 	google.maps.DirectionsTravelMode.WALKING
        // // ) {
        // for (var i = 0; i < arrpoint.length; i++) {
        // 	new google.maps.Marker({
        // 		position: arrpoint[i],
        // 		map: map,
        // 		//title: arrpoint[i].name,
        // 		icon: "https://img.icons8.com/color/10/000000/trolleybus.png"
        // 		//  icon: iconbase
        // 	});
        // }
        //}
        //	console.log(renderer.getDirectionsTravelMode());
        console.log(arrpoint);

        console.log(arrpath);
      });

      google.maps.event.addDomListener(
        document.getElementById("go"),
        "click",
        route
      );

      var input = document.getElementById("from");
      var autocomplete = new google.maps.places.Autocomplete(input);
      autocomplete.bindTo("bounds", map);
      var input1 = document.getElementById("to");
      var autocomplete1 = new google.maps.places.Autocomplete(input1);
      autocomplete1.bindTo("bounds", map);
      var input2 = document.getElementById("pac-input");
      var autocomplete2 = new google.maps.places.Autocomplete(input2);
      autocomplete2.bindTo("bounds", map);

      autocomplete2.addListener("place_changed", function() {
        var stations = [];

        clearMarkers();
        //  directions.setMap(null);
        for (var i = 0; i < rendererarr.length; i++) {
          if (rendererarr[i]) {
            rendererarr[i].setMap(null);
          }
        }
        // console.log("vvvv");
        console.log(rendererarr1);
        for (var j = 0; j < rendererarr1.length; j++) {
          //rendererarr1[j].setMap(null);
          for (var k = 0; k < rendererarr1[j].length; k++) {
            rendererarr1[j][k].setMap(null);
          }
        }

        console.log("****");
        // renderer.setMap(null);

        var place = autocomplete2.getPlace();

        if (place.geometry.viewport) {
          map.fitBounds(place.geometry.viewport);
        } else {
          map.setCenter(place.geometry.location);
          map.setZoom(17);
        }
        var lat = place.geometry.location.lat();
        var lng = place.geometry.location.lng();

        var coordinate = [lat, lng];
        console.log(coordinate);

        fetch("http://localhost:1337/Place/getcoordinate", {
          method: "POST",
          headers: {
            "content-type": "application/json"
          },
          body: JSON.stringify(coordinate)
        })
          .then(res => res.json())
          .then(result => {
            console.log(result);
            // result=stations;
            // console.log(stations);
            for (var i = 0; i < result.length; i++) {
              map.setZoom(17);
              var marker = new google.maps.Marker({
                map: map,
                position: result[i],
                title: result[i].name,
                icon: "https://img.icons8.com/color/30/000000/trolleybus.png"
              });
              markers.push(marker);
            }
          });

        var address = "";
        if (place.address_components) {
          address = [
            (place.address_components[0] &&
              place.address_components[0].short_name) ||
              "",
            (place.address_components[1] &&
              place.address_components[1].short_name) ||
              "",
            (place.address_components[2] &&
              place.address_components[2].short_name) ||
              ""
          ].join(" ");
        }

        infowindowContent.children["place-icon"].src = place.icon;
        infowindowContent.children["place-name"].textContent = place.name;
        infowindowContent.children["place-address"].textContent = address;
        infowindow.open(map, marker);
      });

      // /***********************************/

      transitLayer = new google.maps.TransitLayer();
      var control = document.getElementById("transit-wpr");
      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(control);

      google.maps.event.addDomListener(control, "click", function() {
        transitLayer.setMap(transitLayer.getMap() ? null : map);
      });
      addDepart();
      route();

      var stations = [];

      $.ajax({
        type: "GET",
        url: "/Route/all",
        contentType: "application/json",
        success: function(data) {
          stations = data;
        },
        async: false // <- this turns it into synchronous
      });
      console.log(stations);

      // Zoom and center map automatically by stations (each station will be in visible map area)
      var lngs = stations.map(function(station) {
        return station.lng;
      });
      var lats = stations.map(function(station) {
        return station.lat;
      });
      map.fitBounds({
        west: Math.min.apply(null, lngs),
        east: Math.max.apply(null, lngs),
        north: Math.min.apply(null, lats),
        south: Math.max.apply(null, lats)
      });

      // Show stations on the map as markers
      for (var i = 0; i < stations.length; i++) {
        var marker = new google.maps.Marker({
          position: stations[i],
          map: map,
          title: stations[i].name,
          icon: "https://img.icons8.com/color/20/000000/trolleybus.png"
        });
        markers.push(marker);
      }

      // Divide route to several parts because max stations limit is 25 (23 waypoints + 1 origin + 1 destination)
      for (
        var i = 0, parts = [], max = 25 - 1;
        i < stations.length;
        i = i + max
      )
        parts.push(stations.slice(i, i + max + 1));

      // Service callback to process service results
      var service_callback = function(response, status) {
        if (status != "OK") {
          console.log("Directions request failed due to " + status);
          return;
        }
        var renderer1 = new google.maps.DirectionsRenderer();
        renderer1.setMap(map);
        renderer1.setOptions({
          suppressMarkers: true,
          preserveViewport: true
        });
        renderer1.setDirections(response);
        rendererarr.push(renderer1);
      };

      // Send requests to service to get route (for stations count <= 25 only one request will be sent)
      for (var i = 0; i < parts.length; i++) {
        // Waypoints does not include first station (origin) and last station (destination)
        var waypoints = [];
        for (var j = 1; j < parts[i].length - 1; j++)
          waypoints.push({ location: parts[i][j], stopover: false });
        // Service options
        var service_options = {
          origin: parts[i][0],
          destination: parts[i][parts[i].length - 1],
          waypoints: waypoints,
          travelMode: "WALKING"
        };
        routes.push(service_options);
        // Send request
        directions.route(service_options, service_callback);
      }
    }
    function clearMarkers() {
      for (var i = 0; i < markers.length; i++) {
        if (markers[i]) {
          markers[i].setMap(null);
        }
      }
      markers = [];
    }
    function clearRoutes() {
      for (var i = 0; i < routes.length; i++) {
        if (routes[i]) {
          routes[i].setMap(null);
        }
      }
      routes = [];
    }
    function clearstations() {
      stations = [];
    }
    function addDepart() {
      var depart = document.getElementById("depart");
      for (var i = 0; i < 24; i++) {
        for (var j = 0; j < 60; j += 15) {
          var x = i < 10 ? "0" + i : i;
          var y = j < 10 ? "0" + j : j;
          depart.innerHTML += "<option>" + x + ":" + y + "</option>";
        }
      }
    }

    function route() {
      clearMarkers();
      //  renderer1.setMap(null);
      // console.log("sss");
      // console.log(rendererarr);
      for (var i = 0; i < rendererarr.length; i++) {
        if (rendererarr[i]) {
          rendererarr[i].setMap(null);
        }
      }
      var departure = document.getElementById("depart").value;
      var bits = departure.split(":");
      var now = new Date();
      var tzOffset = (now.getTimezoneOffset() + 60) * 60 * 1000;
      var time = new Date();
      time.setHours(bits[0]);
      time.setMinutes(bits[1]);
      var ms = time.getTime() - tzOffset;
      if (ms < now.getTime()) {
        ms += 24 * 60 * 60 * 1000;
      }
      var departureTime = new Date(ms);
      // var TransitMode = [];
      // var modes = [];
      var request = {
        origin: document.getElementById("from").value,
        //destination: "Hàm Nghi, District 1, Ho Chi Minh City, Vietnam",
        destination: document.getElementById("to").value,
        travelMode: google.maps.DirectionsTravelMode.TRANSIT,
        //TransitStop: google.maps.TransitStop,
        provideRouteAlternatives: true,
        transitOptions: {
          departureTime: departureTime,
          modes: ["BUS"],
          routingPreference: "FEWER_TRANSFERS"
          // modes: TransitMode
          //	arrivalTime: Date
          // departureTime: Date,

          //routingPreference: TransitRoutePreference

          //num_stops: num_stops
        },
        unitSystem: google.maps.UnitSystem.IMPERIAL

        // unitSystem: UnitSystem,
        // waypoints: DirectionsWaypoint
      };

      var panel = document.getElementById("panel");
      panel.innerHTML = "";

      // console.log(waypoints);
      directions.route(request, function(response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
          renderer.setDirections(response);
          renderer.setMap(null);
          renderer.setPanel(panel);
          renderDirectionsPolylines(response);

          console.log(renderer.getDirections());
        } else {
          renderer.setMap(null);
          renderer.setPanel(null);
        }
      });
    }

    function getLiText(point) {
      var lat = point.lat();
      var lng = point.lng();
      return { lat: lat, lng: lng };
      //return lat + lng;
    }
    var polylineOptions = {
      strokeColor: "green",
      strokeOpacity: 1,
      strokeWeight: 4
    };
    var polylineOptions1 = {
      strokeColor: "#C83939",
      strokeOpacity: 1,
      strokeWeight: 4
    };
    var walkingPolylineOptions = {
      strokeColor: "#C83939",
      strokeOpacity: 0,
      strokeWeight: 4,
      icons: [
        {
          icon: {
            path: google.maps.SymbolPath.CIRCLE,
            fillColor: "#C83939",
            fillOpacity: 1,
            scale: 2,
            strokeColor: "#C83939",
            strokeOpacity: 1
          },
          offset: "0",
          repeat: "10px"
        }
      ]
    };
    var polylines = [];
    function renderDirectionsPolylines(response, index) {
      if (!index) index = 0;
      for (var i = 0; i < polylines.length; i++) {
        polylines[i].setMap(null);
      }
      clearMarkers();
      var bounds = new google.maps.LatLngBounds();

      var legs = response.routes[index].legs;
      for (i = 0; i < legs.length; i++) {
        var steps = legs[i].steps;
        for (j = 0; j < steps.length; j++) {
          var nextSegment = steps[j].path;
          // console.log("a");
          // console.log(nextSegment);
          // console.log("***********");
          var stepPolyline = new google.maps.Polyline(polylineOptions1);
          var stepPolyline1 = new google.maps.Polyline(polylineOptions);
          if (steps[j].travel_mode == google.maps.TravelMode.WALKING) {
            stepPolyline.setOptions(walkingPolylineOptions);
          }
          for (k = 0; k < nextSegment.length; k++) {
            stepPolyline.getPath().push(nextSegment[k]);
            bounds.extend(nextSegment[k]);
          }
          stepPolyline.setMap(map);
          polylines.push(stepPolyline);
          rendererarr1.push(polylines);
          // console.log(rendererarr1);
          map.fitBounds(bounds);
        }
      }
    }
    google.maps.event.addDomListener(window, "load", initialize);
  }
</script>
<script
  src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBfU0HHr85-TMjYIwntpK0utMjlw7naDrM&libraries=geometry,places&callback=initmap&language=vi&region=vi"
  async
  defer
></script>
